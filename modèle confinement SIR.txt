from manim import *
import random,math,numpy as np

class SimulationEpidemie(Scene):

 def construct(self):

  RAYON=3
  NB_POINTS=20
  NB_INFECTES_INIT=3
  RAYON_INFECTION=0.5

  PROBA_INFECTION=0.5
  PROBA_DEPLACEMENT=0.3
  PROBA_GUERISON=0.2
  PROBA_CONFINEMENT=0.2
  PAS=30
  NB_SIMULATIONS=100

  historiques_infections,historiques_sains=[],[]

  for sim in range(NB_SIMULATIONS):

   points,etats,positions_init=[],[],[]
   hist_I,hist_S=[],[]
   confines=[False]*NB_POINTS
   angle_step=TAU/NB_POINTS

   for i in range(NB_POINTS):
    angle=i*angle_step
    pos=RAYON*np.array([math.cos(angle),math.sin(angle),0])
    dot=Dot(point=pos,color=GREEN,radius=0.1)
    points.append(dot)
    positions_init.append(pos)
    etats.append("S")


   for idx in random.sample(range(NB_POINTS),NB_INFECTES_INIT):
    points[idx].set_color(RED)
    etats[idx]="I"


   if sim==0:
    compteur=Integer(number=NB_INFECTES_INIT,font_size=36).to_corner(UP+RIGHT)
    self.add(*points,compteur)

   hist_I.append(sum(s=="I"for s in etats))
   hist_S.append(sum(s=="S"for s in etats))

   if sim==0:
    compteur.set_value(hist_I[-1])

   def maj_points():
    anims=[]
    futurs=[]
    nouveaux=etats[:]

    for i,d in enumerate(points):
     pos=d.get_center()

     if etats[i]=="I" and not confines[i] and random.random()<PROBA_CONFINEMENT:
      confines[i]=True

     if confines[i]:
      cible=positions_init[i]
     elif np.allclose(pos,positions_init[i]) and random.random()<PROBA_DEPLACEMENT:
      cible=ORIGIN
     else:
      cible=positions_init[i]

     futurs.append(cible)

     if sim==0:
      anims.append(UpdateFromAlphaFunc(d,lambda m,a,d=pos,c=cible:m.move_to(interpolate(d,c,a))))


    for i in range(NB_POINTS):
     if etats[i]!="I":
      continue

     for j in range(NB_POINTS):
      if etats[j]=="S":
       d=np.linalg.norm(futurs[i]-futurs[j])
       if d<RAYON_INFECTION and random.random()<PROBA_INFECTION:
        nouveaux[j]="I"


    for i in range(NB_POINTS):
     if etats[i]=="I" and random.random()<PROBA_GUERISON:
      nouveaux[i]="R"

    return anims,nouveaux

   for _ in range(PAS):
    anims,nouv=maj_points()

    if sim==0:
     self.play(*anims,run_time=0.5)

    for i,e in enumerate(nouv):
     if e!=etats[i]:
      etats[i]=e
      points[i].set_color({"S":GREEN,"I":RED,"R":BLUE}[e])

    hist_I.append(sum(s=="I"for s in etats))
    hist_S.append(sum(s=="S"for s in etats))

    if sim==0:
     compteur.set_value(hist_I[-1])


   historiques_infections.append(hist_I)
   historiques_sains.append(hist_S)


  moy_I=[sum(h[i]for h in historiques_infections)/NB_SIMULATIONS for i in range(PAS+1)]
  moy_S=[sum(h[i]for h in historiques_sains)/NB_SIMULATIONS for i in range(PAS+1)]

  S,I,R=[NB_POINTS-NB_INFECTES_INIT],[float(NB_INFECTES_INIT)],[0.0]
  BETA=(PROBA_DEPLACEMENT**2)*19*PROBA_INFECTION
  GAMMA=PROBA_GUERISON
  CONF=PROBA_CONFINEMENT

  for _ in range(PAS):
   s,i,r=S[-1],I[-1],R[-1]
   i_eff=i*(1-CONF)
   new_I=BETA*s*i_eff/NB_POINTS
   new_R=GAMMA*i
   S.append(s-new_I)
   I.append(i+new_I-new_R)
   R.append(r+new_R)


  self.clear()

  ax=Axes(x_range=[0,PAS],y_range=[0,NB_POINTS],axis_config={"include_numbers":True}).scale(0.8).to_edge(DOWN)
  cs=ax.plot_line_graph(x_values=range(PAS+1),y_values=moy_I,line_color=RED,add_vertex_dots=False)
  cm=ax.plot_line_graph(x_values=range(PAS+1),y_values=I,line_color=BLUE,add_vertex_dots=False)
  leg=VGroup(Dot(color=RED),Text("Moy Sim I",font_size=24),Dot(color=BLUE),Text("Mod I",font_size=24)).arrange_in_grid(rows=1,cols=4,buff=0.3).next_to(ax,DOWN)
  self.play(Create(ax))
  self.play(Create(cs),Create(cm),FadeIn(leg))
  self.wait(15)


  self.clear()

  ax=Axes(x_range=[0,PAS],y_range=[0,NB_POINTS],axis_config={"include_numbers":True}).scale(0.8).to_edge(DOWN)
  cs=ax.plot_line_graph(x_values=range(PAS+1),y_values=moy_S,line_color=GREEN,add_vertex_dots=False)
  cm=ax.plot_line_graph(x_values=range(PAS+1),y_values=S,line_color=YELLOW,add_vertex_dots=False)
  leg=VGroup(Dot(color=GREEN),Text("Moy Sim S",font_size=24),Dot(color=YELLOW),Text("Mod S",font_size=24)).arrange_in_grid(rows=1,cols=4,buff=0.3).next_to(ax,DOWN)
  self.play(Create(ax))
  self.play(Create(cs),Create(cm),FadeIn(leg))
  self.wait(15)
